{"version":3,"sources":["components/main/flickr-service-spec.js"],"names":[],"mappings":";;AAAA;;;;AACA;;IAAY,K;;AACZ;;;;;;AAEA,SAAS,eAAT,EAA0B,YAAM;;AAE9B,MAAI,OAAJ,EAAa,YAAb;AACA,aAAW,YAAM;AAAE,sBAAQ,IAAR,CAAa,MAAb;AAA+B,GAAlD;;AAEA,aAAW,MAAM,OAAN,CAAc,MAAd,CAAqB,UAAC,cAAD,EAAiB,eAAjB,EAAqC;AACnE,cAAU,eAAV;AACA,mBAAe,cAAf;;AAEA,iBAAa,SAAb,CAAuB,yBAAvB,EACa,OADb,CACqB;AACnB,eAAS,eADU;AAEnB,cAAQ,qBAFW;AAGnB,qBAAe,EAHI;AAInB,kBAAY,sBAJO;AAKnB,mBAAa,eALM;AAMnB,eAAS,CACR;AACC,iBAAS,MADV;AAEC,gBAAQ,sBAFT;AAGC,iBAAS,EAAC,KAAI,sBAAL,EAHV;AAIC,sBAAc,2BAJf;AAKC,uBAAe,iBALhB;AAMC,qBAAa,sBANd;AAOC,kBAAU,mBAPX;AAQC,qBAAa,MARd;AASC,gBAAQ;AATT,OADQ;AANU,KADrB;AAoBD,GAxBU,CAAX;;AA2BA,KAAG,yCAAH,EAA8C,YAAO;AACnD,iBAAa,WAAb,CAAyB,yBAAzB;AACA,YAAQ,UAAR,CAAmB,WAAnB;AACA,iBAAa,KAAb;AACD,GAJD;;AAMA,KAAG,kCAAH,EAAuC,YAAW;AAChD,iBAAa,WAAb,CAAyB,yBAAzB;AACA,YAAQ,UAAR,CAAmB,WAAnB,EAAgC,IAAhC,CAAqC,YAAM;AACzC,aAAO,QAAQ,YAAR,EAAP,EAA+B,IAA/B,CAAoC,CAApC;AACD,KAFD;AAGA,iBAAa,KAAb;AACD,GAND;AAQD,CA9CD","file":"components/main/flickr-service-spec.js","sourcesContent":["import angular from 'angular';\nimport * as mocks from 'angular-mocks';\nimport {appName} from '../../config/constants';\n\ndescribe('FlickrService', () => {\n\n  var service, $httpBackend;\n  beforeEach(() => { angular.mock.module(appName); });\n\n  beforeEach(mocks.default.inject((_$httpBackend_, _FlickrService_) => {\n    service = _FlickrService_;\n    $httpBackend = _$httpBackend_;\n\n    $httpBackend.whenJSONP(/http:\\/\\/api.flickr.com/)\n                .respond({\n      \"title\": \"Fake response\",\n      \"link\": \"http://fakelink.com\",\n      \"description\": \"\",\n      \"modified\": \"1970-01-01T01:01:01Z\",\n      \"generator\": \"FakeGenerator\",\n      \"items\": [\n       {\n        \"title\": \"TEST\",\n        \"link\": \"http://FakeImageLing\",\n        \"media\": {\"m\":\"http://fakeImage.jpg\"},\n        \"date_taken\": \"1970-01-01T12:05:34-08:00\",\n        \"description\": \"FakeDescription\",\n        \"published\": \"1970-01-01T22:59:45Z\",\n        \"author\": \"fake@unittest.com\",\n        \"author_id\": \"F@K3\",\n        \"tags\": \"fake tags for testing\"\n       }]\n     });\n  }));\n\n\n  it(\"should perform a request against Flickr\", () =>  {\n    $httpBackend.expectJSONP(/http:\\/\\/api.flickr.com/);\n    service.loadImages('AngularJS');\n    $httpBackend.flush();\n  });\n\n  it(\"should contain result with items\", function() {\n    $httpBackend.expectJSONP(/http:\\/\\/api.flickr.com/);\n    service.loadImages('AngularJS').then(() => {\n      expect(service.numberOfHits()).toBe(1);\n    });\n    $httpBackend.flush();\n  });\n\n});\n"],"sourceRoot":"/source/"}