{"version":3,"sources":["components/main/flickr-service.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKqB,a;;;;;;SAGnB,M,GAAS,E;;;;;;;;mCAGM;AACb,aAAO,KAAK,MAAL,CAAY,MAAnB;AACD;;;+BAEU,S,EAAW;AAAA;;AACpB,UAAI,uEAAqE,SAArE,wDAAJ;;AAEA,aAAO,KAAK,KAAL,CACJ,KADI,CACE,GADF,EAEJ,IAFI,CAEC,oBAAY;AAChB,cAAK,MAAL,GAAc,SAAS,IAAT,CAAc,KAA5B;AACD,OAJI,CAAP;AAKD;;;;;;;WAhBe,I;;;;kBAFG,a","file":"components/main/flickr-service.js","sourcesContent":["import {service, inject} from '../../config/decorators';\n\n/* jshint ignore:start */\n@service\n/* jshint ignore:end */\nexport default class FlickrService {\n  /* jshint ignore:start */\n  @inject $http = null;\n  images = [];\n  /* jshint ignore:end */\n\n  numberOfHits() {\n    return this.images.length;\n  }\n\n  loadImages(searchTag) {\n    let URL = `http://api.flickr.com/services/feeds/photos_public.gne?tags=${searchTag}&tagmode=any&format=json&jsoncallback=JSON_CALLBACK`;\n\n    return this.$http\n      .jsonp(URL)\n      .then(response => {\n        this.images = response.data.items;\n      });\n  }\n}\n"],"sourceRoot":"/source/"}