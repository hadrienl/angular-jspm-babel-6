{"version":3,"sources":["config/auth-interceptor.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,SAAS,eAAT,CAA0B,OAA1B,EAAmC,SAAnC,EAA8C,EAA9C,EAAkD,SAAlD,EAA6D;AAC3D,SAAO;AACL,mBAAe,uBAAU,SAAV,EAAqB;AAClC,UAAI,SAAS,UAAU,GAAV,CAAc,QAAd,CAAb;AACA,UAAI,QAAQ,UAAU,MAAtB,EAA8B;AAC5B,YAAI,SAAS,UAAU,IAAV,GAAiB,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAAb;YACE,aAAa,OAAO,IAAP,CAAY,OAAO,IAAP,CAAY,IAAxB,EAA8B,OAAO,QAArC,CADf;AAEA,gBAAQ,QAAR,UAAwB,MAAxB,oBAA6C,UAA7C;AACD;;AAED,aAAO,GAAG,MAAH,CAAU,SAAV,CAAP;AACD;AAVI,GAAP;AAYD;AACD,gBAAgB,OAAhB,GAA0B,CAAC,SAAD,EAAY,WAAZ,EAAyB,IAAzB,EAA+B,WAA/B,CAA1B;;AAEO,IAAI,wDAAwB,kBAAQ,MAAR,2CAA8C,EAA9C,EAClC,OADkC,CAC1B,iBAD0B,EACP,eADO,CAA5B","file":"config/auth-interceptor.js","sourcesContent":["import angular from 'angular';\nimport {appName} from './constants';\n\nfunction AuthInterceptor ($window, $location, $q, $injector) {\n  return {\n    responseError: function (rejection) {\n      let $state = $injector.get('$state');\n      if (401 === rejection.status) {\n        let hostV1 = $location.host().replace('.v2', ''),\n          currentUrl = $state.href($state.next.name, $state.toParams);\n        $window.location = `//${hostV1}/login?back=${currentUrl}&backv=2`;\n      }\n\n      return $q.reject(rejection);\n    }\n  };\n}\nAuthInterceptor.$inject = ['$window', '$location', '$q', '$injector'];\n\nexport let authInterceptorModule = angular.module(`${appName}.auth-interceptor`, [])\n.factory('AuthInterceptor', AuthInterceptor);\n"],"sourceRoot":"/source/"}